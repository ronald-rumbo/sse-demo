{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const TaskCard=_ref=>{let{task}=_ref;const formatDate=dateString=>{const date=new Date(dateString);return date.toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};const getTagColor=tag=>{const colors=['#e3f2fd','#f3e5f5','#e8f5e8','#fff3e0','#fce4ec','#e1f5fe','#f1f8e9','#fff8e1'];const index=tag.split('').reduce((acc,char)=>acc+char.charCodeAt(0),0);return colors[index%colors.length];};return/*#__PURE__*/_jsxs(\"div\",{className:\"task-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"task-header\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"task-title\",children:task.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-dates\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"task-date\",children:[\"Created: \",formatDate(task.createdAt)]}),task.modifiedAt!==task.createdAt&&/*#__PURE__*/_jsxs(\"span\",{className:\"task-date\",children:[\"Modified: \",formatDate(task.modifiedAt)]})]})]}),task.description&&/*#__PURE__*/_jsx(\"p\",{className:\"task-description\",children:task.description}),task.tags.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"task-tags\",children:task.tags.map((tag,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"task-tag\",style:{backgroundColor:getTagColor(tag)},children:tag},index))})]});};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","TaskCard","_ref","task","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","getTagColor","tag","colors","index","split","reduce","acc","char","charCodeAt","length","className","children","title","createdAt","modifiedAt","description","tags","map","style","backgroundColor"],"sources":["/Users/ron/Downloads/tmp/astay/demo-sse-net/frontend/src/components/TaskCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Task } from '../types/Task';\n\ninterface TaskCardProps {\n  task: Task;\n}\n\nexport const TaskCard: React.FC<TaskCardProps> = ({ task }) => {\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getTagColor = (tag: string) => {\n    const colors = [\n      '#e3f2fd', '#f3e5f5', '#e8f5e8', '#fff3e0',\n      '#fce4ec', '#e1f5fe', '#f1f8e9', '#fff8e1'\n    ];\n    const index = tag.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    return colors[index % colors.length];\n  };\n\n  return (\n    <div className=\"task-card\">\n      <div className=\"task-header\">\n        <h3 className=\"task-title\">{task.title}</h3>\n        <div className=\"task-dates\">\n          <span className=\"task-date\">Created: {formatDate(task.createdAt)}</span>\n          {task.modifiedAt !== task.createdAt && (\n            <span className=\"task-date\">Modified: {formatDate(task.modifiedAt)}</span>\n          )}\n        </div>\n      </div>\n\n      {task.description && (\n        <p className=\"task-description\">{task.description}</p>\n      )}\n\n      {task.tags.length > 0 && (\n        <div className=\"task-tags\">\n          {task.tags.map((tag, index) => (\n            <span\n              key={index}\n              className=\"task-tag\"\n              style={{ backgroundColor: getTagColor(tag) }}\n            >\n              {tag}\n            </span>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAO1B,MAAO,MAAM,CAAAC,QAAiC,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACxD,KAAM,CAAAE,UAAU,CAAIC,UAAkB,EAAK,CACzC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,UAAU,CAAC,CACjC,MAAO,CAAAC,IAAI,CAACE,kBAAkB,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SACV,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,WAAW,CAAIC,GAAW,EAAK,CACnC,KAAM,CAAAC,MAAM,CAAG,CACb,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAC1C,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAC3C,CACD,KAAM,CAAAC,KAAK,CAAGF,GAAG,CAACG,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,CAAEC,IAAI,GAAKD,GAAG,CAAGC,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAC9E,MAAO,CAAAN,MAAM,CAACC,KAAK,CAAGD,MAAM,CAACO,MAAM,CAAC,CACtC,CAAC,CAED,mBACEvB,KAAA,QAAKwB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzB,KAAA,QAAKwB,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1B3B,IAAA,OAAI0B,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEtB,IAAI,CAACuB,KAAK,CAAK,CAAC,cAC5C1B,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBzB,KAAA,SAAMwB,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,WAAS,CAACrB,UAAU,CAACD,IAAI,CAACwB,SAAS,CAAC,EAAO,CAAC,CACvExB,IAAI,CAACyB,UAAU,GAAKzB,IAAI,CAACwB,SAAS,eACjC3B,KAAA,SAAMwB,SAAS,CAAC,WAAW,CAAAC,QAAA,EAAC,YAAU,CAACrB,UAAU,CAACD,IAAI,CAACyB,UAAU,CAAC,EAAO,CAC1E,EACE,CAAC,EACH,CAAC,CAELzB,IAAI,CAAC0B,WAAW,eACf/B,IAAA,MAAG0B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAEtB,IAAI,CAAC0B,WAAW,CAAI,CACtD,CAEA1B,IAAI,CAAC2B,IAAI,CAACP,MAAM,CAAG,CAAC,eACnBzB,IAAA,QAAK0B,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBtB,IAAI,CAAC2B,IAAI,CAACC,GAAG,CAAC,CAAChB,GAAG,CAAEE,KAAK,gBACxBnB,IAAA,SAEE0B,SAAS,CAAC,UAAU,CACpBQ,KAAK,CAAE,CAAEC,eAAe,CAAEnB,WAAW,CAACC,GAAG,CAAE,CAAE,CAAAU,QAAA,CAE5CV,GAAG,EAJCE,KAKD,CACP,CAAC,CACC,CACN,EACE,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}